{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/Modal/Modal.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Error/Error.js","Components/Loader/Loader.js","Api/api.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","evt","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","trim","modalRoot","document","querySelector","Modal","onClose","children","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","target","ImageGalleryItem","smallImage","largeImage","id","tags","largeImg","setLargeImg","showModal","setShowModal","toggleModal","state","onImgClick","src","alt","Button","Error","role","LoaderFunk","color","height","width","timeout","api","apiServise","page","fetch","then","response","ok","json","Promise","reject","Status","ImageGallery","setPage","images","setImages","status","setStatus","hits","length","scrollTo","top","documentElement","scrollHeight","behavior","map","image","webformatURL","largeImageURL","Loader","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.abb1b295.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleQuery = (evt) => {\n    setQuery(evt.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleQuery}\n          value={query}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ onClose, children }) => {\n  const handleKeyDown = (evt) => {\n    if (evt.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const onBackdropClick = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={onBackdropClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from \"react\";\nimport Modal from \"../Modal\";\n\nconst ImageGalleryItem = ({ smallImage, largeImage, id, tags }) => {\n  const [largeImg, setLargeImg] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal((state) => !state);\n  };\n\n  const onImgClick = (largeImg) => {\n    setLargeImg(largeImg);\n    toggleModal();\n  };\n\n  return (\n    <>\n      <li\n        className=\"ImageGalleryItem\"\n        key={id}\n        id={id}\n        onClick={() => onImgClick(largeImage)}\n      >\n        <img src={smallImage} alt={tags} className=\"ImageGalleryItem-image\" />\n      </li>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImg} alt=\"\" />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n","const Button = ({ onClick }) => {\n  return (\n    <button onClick={onClick} type=\"button\" className=\"Button\">\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","const Error = ({ query }) => {\n  return (\n    <div className=\"error\" role=\"alert\">\n      <h2>No matches found on \"{query}\"</h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import Loader from \"react-loader-spinner\";\n\nconst LoaderFunk = () => {\n  return (\n    <Loader\n      type=\"Audio\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default LoaderFunk;\n","function apiServise(query, page) {\n  const baseURL = \"https://pixabay.com/api/\";\n  const KEY = \"21845085-bf7da5e4527dd4de2f5d726ec\";\n\n  return fetch(\n    `${baseURL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(\"No matches found\"));\n  });\n}\n\nconst api = { apiServise };\n\nexport default api;\n","import { useState, useEffect } from \"react\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport Button from \"../Button\";\nimport Error from \"../Error\";\nimport Loader from \"../Loader\";\n\nimport api from \"../../Api/api\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nconst ImageGallery = ({ query }) => {\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setPage(1);\n    setImages([]);\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n\n    api.apiServise(query, page).then((response) => {\n      if (response.hits.length !== 0) {\n        setImages((images) => [...images, ...response.hits]);\n        setStatus(Status.RESOLVED);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      } else {\n        setPage(1);\n        setImages([]);\n        setStatus(Status.REJECTED);\n      }\n    });\n  }, [page, query]);\n\n  const onLoadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  if (status === \"idle\") {\n    return <div className=\"start\">☝</div>;\n  }\n\n  if (status === \"resolved\" && images.length !== 0) {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {images.map((image) => (\n            <ImageGalleryItem\n              key={image.webformatURL}\n              smallImage={image.webformatURL}\n              largeImage={image.largeImageURL}\n              id={image.id}\n              tags={image.tags}\n            />\n          ))}\n        </ul>\n        {images.length > 0 && <Button onClick={onLoadMore} />}\n      </>\n    );\n  }\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"wrapperLoader\">\n        <Loader />\n      </div>\n    );\n  }\n  if (status === \"rejected\") {\n    return <Error query={query} />;\n  }\n};\n\nexport default ImageGallery;\n","import { useState } from \"react\";\n\nimport Searchbar from \"./Components/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={setQuery} />\n      <ImageGallery query={query} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}